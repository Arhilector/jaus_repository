# 1. Вначале, как обычно, импортируем в проект библиотеку Pandas
import pandas as pd

# 2. Скачаем библиотеку Matplotlib через Python Packages — Install packages.
# В PyCharm открываем вкладку Python Packages (третья вкладка сверху на панели инструментов),
# в строке поиска набираем matplotlib и в правом углу интерфейса нажимаем Install packages.

# 3. Импортируем библиотеку Matplotlib
import matplotlib.pyplot as plt

# 4. Создадим простой словарь, из которого сделаем датафрейм
data = {'value': [1, 2, 3, 3, 3, 4, 4, 4, 5, 6, 7, 8, 9, 10, 55]}

# Преобразуем словарь в датафрейм
df = pd.DataFrame(data)

# 5. Создадим график, который поможет визуализировать данные из датафрейма
# Для этого будем использовать библиотеку Matplotlib
df['value'].hist()

# Отображаем график
#plt.show()



# 2. Далее определим первый (Q1) и третий (Q3) квартили, используя функцию quantile():
Q1 = df['value'].quantile(0.25)
Q3 = df['value'].quantile(0.75)

# 3. Теперь рассчитаем межквартальный размах (IQR)
IQR = Q3 - Q1

# Все эти переменные нужны для будущих расчётов.
# Ещё раз взглянем на созданный выше график. В нём есть нижняя и верхняя граница всех основных элементов, встречающихся в данных.
# Для расчёта нам пригодятся все прописанные выше значения.

# 4. На основе вычисленных значений определим нижнюю и верхнюю границы для определения выбросов.
downside = Q1 - 1.5 * IQR
upside = Q3 + 1.5 * IQR

# 5. Таким образом мы найдём значения для верхней и нижней границы.
# А теперь необходимо удалить выбросы, которые не входят в очерченный диапазон.
# Создадим новый датафрейм:
df_new = df[(df['value'] >= downside) & (df['value'] <= upside)]

# Этот новый датафрейм будет содержать значения, большие или равные нижней границе и меньшие или равные верхней границе.
# При этом & значает значение "и".

# 6. Наконец, для визуальной оценки нового набора данных создадим график boxplot:
df_new.boxplot(column='value')
plt.show()
#Можно использовать другой вариант визуализации этих данных:

df.boxplot(column='value')

plt.show()